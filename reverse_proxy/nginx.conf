events { } 
# The “events” context is contained within the “main” context. 
# It is used to set global options that affect how Nginx handles connections at a general level. 
# There can only be a single events context defined within the Nginx configuration.        
  
  http {
    upstream dynamic { server 127.0.0.1; 
    }
      server {
          listen 80 default_server;
          server_name _;
          return 301 https://$host$request_uri;
      }
      server {
        listen 443 ssl;
        server_name _;
        ssl_certificate certs/nginx-selfsigned.crt;
        ssl_certificate_key certs/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA512:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA512:ECDHE-ECDSA-AES256-CBC-SHA512:ECDHE-ECDSA-AES128-CBC-SHA512:ECDHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA512:ECDHE-RSA-AES256-CBC-SHA512:ECDHE-RSA-AES128-CBC-SHA512:;

        location /front/ {
          proxy_pass http://frontend:8090/;
          proxy_http_version 1.1;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_pass_header Server;
        }
        location /auth/ {
          proxy_pass http://authservice:3300/;
          proxy_http_version 1.1;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_pass_header Server;
        }
        location /gmail/ {
          proxy_pass http://gmailservice:8081/;
          proxy_http_version 1.1;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_pass_header Server;
        }
  }
}